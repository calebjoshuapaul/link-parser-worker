addEventListener("fetch", (event) => {
  return event.respondWith(handleRequest(event.request));
});

const html = `<h1>Hello People</h1>
    <p>This markup was generated by a Cloudflare Worker.</p>`;

async function handleRequest(request) {
  const reqUrl = new URL(request.url);
  const url = (await reqUrl.searchParams.get("url")) + "/static/html";
  console.log(url);

  const init = {
    headers: {
      "content-type": "text/html;charset=UTF-8",
    },
  };

  if (url === "null/static/html") {
    let res = `<!DOCTYPE html>
      <body>
      <h1>Hello World</h1>
      <form action="/"  method="get">
      <label for="url">Enter url here:</label><br>
      <input type="text" id="url" name="url" value=""><br>
      <input type="submit" value="Submit">
      </form>
       <p>This markup was generated by a Cloudflare Worker.</p>
      </body>`;
    return new Response(res, {
      headers: { "content-type": "text/html;charset=UTF-8" },
    });
  }

  let originalResponse = await fetch(request.url);
  let copyOfOriginalResponse = new Response(
    originalResponse.body,
    originalResponse
  );
  let text = await copyOfOriginalResponse.text();

  const response = await fetch(url, init);
  const fetchedHtmlResults = await response.text();

  let re = /href=\"(http.*?)\"/gm;

  let linksFound = fetchedHtmlResults.matchAll(re);
  let links = [];
  for (let link of linksFound) {
    links.push(link[1]);
  }

  let template = (link) => {
    return `
        <h1>here are the links found from the url="${url}"</h1>
        <ul>
          ${links
            .map((link) => `<li><a href="${link}">${link}</a></li>`)
            .join(" ")}
        </ul>`;
  };

  // console.log(links)
  let result = text.replace(`<h1>Hello World</h1>`, template(links));
  return new Response(result, init);
}
